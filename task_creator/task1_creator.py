def get_instructions_task_1(json_info):

    static_intro = """
    <h1>Task Overview</h1>
    <p>In this job you take/play the role of a member of a group of friends who are using a travel recommendation app to plan a trip together.</p>
    <p>You will be presented with a short background story of the friend group together with a description of each group member. 
    <br/>Read them and pick the group member you identify with most easily-you will take that member's role for the rest of this job. 
    <br/>Once you have made your choice, you will be shown a group trip itinerary that was automatically generated by the travel app along with a number of different explanations that justify the provided explanations.
    </p>
    <p>Considering the group member you chose to play, pick the explanation that would make it the easiest for you to agree with the recommended itinerary. Furthermore, write down the reasoning behind your choice. </p>
    The concrete steps that you will have to follow for this task are the following:
    <ul>
    <li>Read the travel background story and the descriptions of group members.</li>
    <li>Pick a group member you can identify with most easily (general background, group relationships, tourist attraction preferences, hobbies ... ).</li>
    <li>Read the itinerary recommended by the travel app and each of the explanations.</li>
    <li>Pick the explanation that would make it the easiest to agree with the recommended travel itinerary from "your" point of view (that is, the one of the group member you chose in 2).</li>
    <li>Explain why you think that explanation is the best choice.</li>
    </ul>
    <h1>Pick a group member!</h1>
    <p> A group of university friends from Berlin decided they want to go on a trip to Munich together. To make everyone happy, they want to find an itinerary that would accommodate the preferences of all the group members as well as possible. They decide to use a travel app to obtain a recommended itinerary.</p>
    <p> The group is considering the following Points of Interest in Munich:</p>
    <ul>
    <li>Allianz Arena football stadium</li>
    <li>Deutsches Museum - technical museum</li>
    <li>Hofbr√§uhaus - brewery</li>
    <li>Alte Pinakothek - art gallery</li>
    <li>Eisbach - standing wave for surfing</li>
    </ul>
    <p>The group of friends consists of 6 students:</p>"""

    descr_opening = """<div class="html-element-wrapper">
    <ul>"""

    descr_closing = """
    </ul>
    <p>Choose the group member you find it the easiest to identify with! (You will continue this job by considering this group member's point of view).</p>
    </div>
    """

    descr_body = """"""

    members = json_info['members']
    for name in members.keys():
        descr = members[name]['description']
        descr_body += f"""
        <li><b>{name}</b>: {descr}</li><br/>"""

    return static_intro + descr_opening + descr_body + descr_closing

def generate_member_info(name, json_info):

    intro = f"""<cml:p only-if="member_choice:[{name}]">
        <h1>{name}</h1>
    </cml:p>
    <cml:p only-if="member_choice:[{name}]">
        You have chosen to impersonate {name}!
        <br/>{json_info['members'][name]["relationships"]}
    </cml:p>"""

    pois_opening = f"""<cml:p only-if="member_choice:[{name}]">
    {name}'s ratings for the considered points of interest for this trip were the following:
    </cml:p>

    <cml:ul only-if="member_choice:[{name}]">"""
    
    pois_body = """"""
    members = json_info['members']
    pois_names = json_info['POIs']
    ratings = members[name]['ratings']

    for i in range(len(ratings)):
        pois_body += f"""<li>{pois_names[i]}: {ratings[i]}</li>"""


    pois_closing = """</cml:ul>"""

    pois = pois_opening + pois_body + pois_closing

    itinerary =  f"""<cml:p only-if="member_choice:[{name}]">
    Based on the information the group provided, the travel app generates the following itinerary:
    </cml:p>
    <cml:ul only-if="member_choice:[{name}]">
    <li>HB Brewery</li>
    <li>Eisbach Surfspot</li>
    <li>Stadium</li>
    </cml:ul>"""

    variants_intro = f"""<div class="html-element-wrapper">
    <cml:radios label="Pick the explanation that would make it the easiest to agree with the recommended itinerary from {name}'s perspective." name="choice_{name}" only-if="member_choice:[{name}]" validates="required">"""
    
    variants_body = """"""
    variants = members[name]['variants']
    for idx, variant in enumerate(variants):
        variants_body += f"""<cml:radio label="{variant}" value = "{idx}"></cml:radio><br/>"""
    
    variants_closing = f"""</cml:radios><cml:text label="Provide a rationale for your choice regarding the explanation for {name}:" name="rationale_{name}" only-if="member_choice:[{name}]" validates="required"/></div>"""

    variants_cml = variants_intro + variants_body + variants_closing


    return intro + pois + itinerary + variants_cml

def get_cml_task_1(json_info):
    radio_row = """<cml:radio label="{}" value = "{}">{}</cml:radio>"""
    members = json_info['members']

    choice_opening = """
    <div class="html-element-wrapper">
        <cml:radios label="Choose a member" name="member_choice" >"""
    
    choice_body = """"""
    for name in members.keys():
        choice_body += radio_row.format(name, name, name)

    choice_closing = """</cml:radios>
    </div>
    """
    choice = choice_opening + choice_body + choice_closing

    members_info = """"""
    for name in members.keys():
        print(f"Getting info for {name}")
        member_info = generate_member_info(name, json_info)
        members_info += member_info
  

    return choice + members_info